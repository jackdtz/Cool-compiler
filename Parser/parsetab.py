
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'D1DE88D851001502B042CE55B3EB6C14'
    
_lr_action_items = {'RBRACKET':([37,39,44,46,48,51,69,73,78,79,80,81,82,83,84,86,88,93,109,111,114,120,123,125,131,132,],[-50,54,-49,-48,-36,-35,-47,-46,-45,-37,-43,-42,-41,-40,-44,-39,-38,-14,-22,-29,-23,-20,-15,-30,-21,-16,]),'EQUAL':([37,39,44,46,48,49,50,51,66,67,68,69,73,78,79,80,81,82,83,84,85,86,88,92,93,94,95,102,106,109,111,114,120,121,123,125,128,131,132,133,],[-50,57,-49,-48,57,57,57,-35,57,57,57,57,-46,57,-37,57,57,57,-40,57,57,-39,-38,57,-14,57,57,57,57,-22,57,-23,-20,57,-15,-30,57,-21,-15,57,]),'CLASS':([0,4,18,],[3,3,-4,]),'INHERITS':([5,],[7,]),'ESAC':([104,116,117,126,134,],[-51,125,-33,-31,-34,]),'WHILE':([29,33,34,35,37,40,41,42,43,44,46,48,51,55,56,57,58,59,60,61,62,63,65,69,70,71,72,73,74,78,79,80,81,82,83,84,86,88,89,91,92,93,97,100,109,110,111,114,115,119,120,122,123,125,130,131,132,],[35,35,35,35,-50,35,35,35,35,-49,-48,-36,-35,35,35,35,35,35,35,35,35,35,35,-47,35,35,35,-46,35,-45,-37,-43,-42,-41,-40,-44,-39,-38,35,35,35,-14,35,35,-22,35,-29,-23,35,35,-20,35,-15,-30,35,-21,-16,]),'COLON':([13,23,26,52,105,],[16,27,30,75,118,]),'COMMA':([24,31,37,44,46,48,51,69,73,78,79,80,81,82,83,84,86,88,93,102,109,111,114,120,123,125,131,132,],[28,-13,-50,-49,-48,-36,-35,-47,-46,-45,-37,-43,-42,-41,-40,-44,-39,-38,-14,115,-22,-29,-23,-20,-15,-30,-21,-16,]),'ISVOID':([29,33,34,35,37,40,41,42,43,44,46,48,51,55,56,57,58,59,60,61,62,63,65,69,70,71,72,73,74,78,79,80,81,82,83,84,86,88,89,91,92,93,97,100,109,110,111,114,115,119,120,122,123,125,130,131,132,],[33,33,33,33,-50,33,33,33,33,-49,-48,-36,-35,33,33,33,33,33,33,33,33,33,33,-47,33,33,33,-46,33,-45,-37,-43,-42,-41,-40,-44,-39,-38,33,33,33,-14,33,33,-22,33,-29,-23,33,33,-20,33,-15,-30,33,-21,-16,]),'NEW':([29,33,34,35,37,40,41,42,43,44,46,48,51,55,56,57,58,59,60,61,62,63,65,69,70,71,72,73,74,78,79,80,81,82,83,84,86,88,89,91,92,93,97,100,109,110,111,114,115,119,120,122,123,125,130,131,132,],[36,36,36,36,-50,36,36,36,36,-49,-48,-36,-35,36,36,36,36,36,36,36,36,36,36,-47,36,36,36,-46,36,-45,-37,-43,-42,-41,-40,-44,-39,-38,36,36,36,-14,36,36,-22,36,-29,-23,36,36,-20,36,-15,-30,36,-21,-16,]),'MINUS':([37,39,44,46,48,49,50,51,66,67,68,69,73,78,79,80,81,82,83,84,85,86,88,92,93,94,95,102,106,109,111,114,120,121,123,125,128,131,132,133,],[-50,65,-49,-48,65,65,65,-35,65,65,65,65,-46,65,-37,65,65,65,-40,65,65,-39,-38,65,65,65,65,65,65,-22,65,-23,-20,65,-15,-30,65,-21,-15,65,]),'RBRACE':([9,10,11,12,15,19,37,44,46,48,51,54,69,73,78,79,80,81,82,83,84,86,88,89,93,94,101,102,103,108,109,111,114,115,120,123,124,125,131,132,],[-51,14,-6,-7,-51,-5,-50,-49,-48,-36,-35,-9,-47,-46,-45,-37,-43,-42,-41,-40,-44,-39,-38,-51,-14,108,114,-18,-19,-8,-22,-29,-23,-51,-20,-15,-17,-30,-21,-16,]),'ARROW':([127,],[130,]),'BOOLEAN':([29,33,34,35,37,40,41,42,43,44,46,48,51,55,56,57,58,59,60,61,62,63,65,69,70,71,72,73,74,78,79,80,81,82,83,84,86,88,89,91,92,93,97,100,109,110,111,114,115,119,120,122,123,125,130,131,132,],[37,37,37,37,-50,37,37,37,37,-49,-48,-36,-35,37,37,37,37,37,37,37,37,37,37,-47,37,37,37,-46,37,-45,-37,-43,-42,-41,-40,-44,-39,-38,37,37,37,-14,37,37,-22,37,-29,-23,37,37,-20,37,-15,-30,37,-21,-16,]),'$end':([1,2,4,6,18,],[0,-1,-3,-2,-4,]),'THEN':([37,44,46,48,51,68,69,73,78,79,80,81,82,83,84,86,88,93,109,111,114,120,123,125,131,132,],[-50,-49,-48,-36,-35,91,-47,-46,-45,-37,-43,-42,-41,-40,-44,-39,-38,-14,-22,-29,-23,-20,-15,-30,-21,-16,]),'LESSTHAN':([37,39,44,46,48,49,50,51,66,67,68,69,73,78,79,80,81,82,83,84,85,86,88,92,93,94,95,102,106,109,111,114,120,121,123,125,128,131,132,133,],[-50,59,-49,-48,59,59,59,-35,59,59,59,59,-46,59,-37,59,59,59,-40,59,59,-39,-38,59,-14,59,59,59,59,-22,59,-23,-20,59,-15,-30,59,-21,-15,59,]),'DIVIDE':([37,39,44,46,48,49,50,51,66,67,68,69,73,78,79,80,81,82,83,84,85,86,88,92,93,94,95,102,106,109,111,114,120,121,123,125,128,131,132,133,],[-50,60,-49,-48,60,60,60,-35,60,60,60,60,-46,60,60,60,60,60,-40,60,60,-39,60,60,60,60,60,60,60,-22,60,-23,-20,60,-15,-30,60,-21,-15,60,]),'LET':([29,33,34,35,37,40,41,42,43,44,46,48,51,55,56,57,58,59,60,61,62,63,65,69,70,71,72,73,74,78,79,80,81,82,83,84,86,88,89,91,92,93,97,100,109,110,111,114,115,119,120,122,123,125,130,131,132,],[38,38,38,38,-50,38,38,38,38,-49,-48,-36,-35,38,38,38,38,38,38,38,38,38,38,-47,38,38,38,-46,38,-45,-37,-43,-42,-41,-40,-44,-39,-38,38,38,38,-14,38,38,-22,38,-29,-23,38,38,-20,38,-15,-30,38,-21,-16,]),'LPAREN':([13,29,33,34,35,37,40,41,42,43,44,45,46,48,51,55,56,57,58,59,60,61,62,63,65,69,70,71,72,73,74,78,79,80,81,82,83,84,86,87,88,89,91,92,93,97,100,109,110,111,112,114,115,119,120,122,123,125,130,131,132,],[17,34,34,34,34,-50,34,34,34,34,-49,70,-48,-36,-35,34,34,34,34,34,34,34,34,34,34,-47,34,34,34,-46,34,-45,-37,-43,-42,-41,-40,-44,-39,100,-38,34,34,34,-14,34,34,-22,34,-29,122,-23,34,34,-20,34,-15,-30,34,-21,-16,]),'RPAREN':([17,21,22,24,28,31,32,37,44,46,48,49,51,69,73,78,79,80,81,82,83,84,86,88,92,93,100,102,103,107,109,111,113,114,115,120,122,123,124,125,129,131,132,],[-51,26,-12,-11,-51,-13,-10,-50,-49,-48,-36,73,-35,-47,-46,-45,-37,-43,-42,-41,-40,-44,-39,-38,-51,-14,-51,-18,-19,120,-22,-29,123,-23,-51,-20,-51,-15,-17,-30,132,-21,-16,]),'ALT':([37,39,44,46,48,49,50,51,66,67,68,69,73,78,79,80,81,82,83,84,85,86,88,92,93,94,95,102,106,109,111,114,120,121,123,125,128,131,132,133,],[-50,62,-49,-48,62,62,62,-35,62,62,62,62,-46,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-22,62,-23,-20,62,-15,-30,62,-21,-15,62,]),'DOT':([37,39,44,46,48,49,50,51,66,67,68,69,73,78,79,80,81,82,83,84,85,86,88,92,93,94,95,102,106,109,111,114,120,121,123,125,128,131,132,133,],[-50,64,-49,-48,64,64,64,-35,64,64,64,64,-46,64,64,64,64,64,64,64,99,64,64,64,64,64,64,64,64,-22,64,-23,-20,64,-15,-30,64,-21,-15,64,]),'OF':([37,44,46,48,51,67,69,73,78,79,80,81,82,83,84,86,88,93,109,111,114,120,123,125,131,132,],[-50,-49,-48,-36,-35,90,-47,-46,-45,-37,-43,-42,-41,-40,-44,-39,-38,-14,-22,-29,-23,-20,-15,-30,-21,-16,]),'GREATEREQ':([37,39,44,46,48,49,50,51,66,67,68,69,73,78,79,80,81,82,83,84,85,86,88,92,93,94,95,102,106,109,111,114,120,121,123,125,128,131,132,133,],[-50,55,-49,-48,55,55,55,-35,55,55,55,55,-46,55,-37,55,55,55,-40,55,55,-39,-38,55,-14,55,55,55,55,-22,55,-23,-20,55,-15,-30,55,-21,-15,55,]),'LBRACE':([8,29,33,34,35,37,40,41,42,43,44,46,47,48,51,55,56,57,58,59,60,61,62,63,65,69,70,71,72,73,74,78,79,80,81,82,83,84,86,88,89,91,92,93,97,100,109,110,111,114,115,119,120,122,123,125,130,131,132,],[9,40,40,40,40,-50,40,40,40,40,-49,-48,72,-36,-35,40,40,40,40,40,40,40,40,40,40,-47,40,40,40,-46,40,-45,-37,-43,-42,-41,-40,-44,-39,-38,40,40,40,-14,40,40,-22,40,-29,-23,40,40,-20,40,-15,-30,40,-21,-16,]),'POOL':([37,44,46,48,51,69,73,78,79,80,81,82,83,84,86,88,93,95,109,111,114,120,123,125,131,132,],[-50,-49,-48,-36,-35,-47,-46,-45,-37,-43,-42,-41,-40,-44,-39,-38,-14,109,-22,-29,-23,-20,-15,-30,-21,-16,]),'CASE':([29,33,34,35,37,40,41,42,43,44,46,48,51,55,56,57,58,59,60,61,62,63,65,69,70,71,72,73,74,78,79,80,81,82,83,84,86,88,89,91,92,93,97,100,109,110,111,114,115,119,120,122,123,125,130,131,132,],[41,41,41,41,-50,41,41,41,41,-49,-48,-36,-35,41,41,41,41,41,41,41,41,41,41,-47,41,41,41,-46,41,-45,-37,-43,-42,-41,-40,-44,-39,-38,41,41,41,-14,41,41,-22,41,-29,-23,41,41,-20,41,-15,-30,41,-21,-16,]),'SEMICOLON':([11,14,37,44,46,48,51,54,66,69,73,78,79,80,81,82,83,84,86,88,93,108,109,111,114,120,123,125,131,132,133,],[15,18,-50,-49,-48,-36,-35,-9,89,-47,-46,-45,-37,-43,-42,-41,-40,-44,-39,-38,-14,-8,-22,-29,-23,-20,-15,-30,-21,-16,134,]),'ELSE':([37,44,46,48,51,69,73,78,79,80,81,82,83,84,86,88,93,106,109,111,114,120,123,125,131,132,],[-50,-49,-48,-36,-35,-47,-46,-45,-37,-43,-42,-41,-40,-44,-39,-38,-14,119,-22,-29,-23,-20,-15,-30,-21,-16,]),'TYPE_ID':([3,7,16,27,30,36,75,118,],[5,8,20,31,47,51,96,127,]),'FI':([37,44,46,48,51,69,73,78,79,80,81,82,83,84,86,88,93,109,111,114,120,123,125,128,131,132,],[-50,-49,-48,-36,-35,-47,-46,-45,-37,-43,-42,-41,-40,-44,-39,-38,-14,-22,-29,-23,-20,-15,-30,131,-21,-16,]),'LESSEQ':([37,39,44,46,48,49,50,51,66,67,68,69,73,78,79,80,81,82,83,84,85,86,88,92,93,94,95,102,106,109,111,114,120,121,123,125,128,131,132,133,],[-50,58,-49,-48,58,58,58,-35,58,58,58,58,-46,58,-37,58,58,58,-40,58,58,-39,-38,58,-14,58,58,58,58,-22,58,-23,-20,58,-15,-30,58,-21,-15,58,]),'GREATERTHAN':([37,39,44,46,48,49,50,51,66,67,68,69,73,78,79,80,81,82,83,84,85,86,88,92,93,94,95,102,106,109,111,114,120,121,123,125,128,131,132,133,],[-50,61,-49,-48,61,61,61,-35,61,61,61,61,-46,61,-37,61,61,61,-40,61,61,-39,-38,61,-14,61,61,61,61,-22,61,-23,-20,61,-15,-30,61,-21,-15,61,]),'MULTIPLY':([37,39,44,46,48,49,50,51,66,67,68,69,73,78,79,80,81,82,83,84,85,86,88,92,93,94,95,102,106,109,111,114,120,121,123,125,128,131,132,133,],[-50,63,-49,-48,63,63,63,-35,63,63,63,63,-46,63,63,63,63,63,-40,63,63,-39,63,63,63,63,63,63,63,-22,63,-23,-20,63,-15,-30,63,-21,-15,63,]),'IN':([37,44,46,48,51,53,69,73,76,77,78,79,80,81,82,83,84,86,88,93,96,98,109,111,114,120,121,123,125,131,132,],[-50,-49,-48,-36,-35,-51,-47,-46,97,-26,-45,-37,-43,-42,-41,-40,-44,-39,-38,-14,-28,-24,-22,-29,-23,-20,-27,-15,-30,-21,-16,]),'LOOP':([37,44,46,48,50,51,69,73,78,79,80,81,82,83,84,86,88,93,109,111,114,120,123,125,131,132,],[-50,-49,-48,-36,74,-35,-47,-46,-45,-37,-43,-42,-41,-40,-44,-39,-38,-14,-22,-29,-23,-20,-15,-30,-21,-16,]),'NOT':([29,33,34,35,37,40,41,42,43,44,46,48,51,55,56,57,58,59,60,61,62,63,65,69,70,71,72,73,74,78,79,80,81,82,83,84,86,88,89,91,92,93,97,100,109,110,111,114,115,119,120,122,123,125,130,131,132,],[43,43,43,43,-50,43,43,43,43,-49,-48,-36,-35,43,43,43,43,43,43,43,43,43,43,-47,43,43,43,-46,43,-45,-37,-43,-42,-41,-40,-44,-39,-38,43,43,43,-14,43,43,-22,43,-29,-23,43,43,-20,43,-15,-30,43,-21,-16,]),'IF':([29,33,34,35,37,40,41,42,43,44,46,48,51,55,56,57,58,59,60,61,62,63,65,69,70,71,72,73,74,78,79,80,81,82,83,84,86,88,89,91,92,93,97,100,109,110,111,114,115,119,120,122,123,125,130,131,132,],[42,42,42,42,-50,42,42,42,42,-49,-48,-36,-35,42,42,42,42,42,42,42,42,42,42,-47,42,42,42,-46,42,-45,-37,-43,-42,-41,-40,-44,-39,-38,42,42,42,-14,42,42,-22,42,-29,-23,42,42,-20,42,-15,-30,42,-21,-16,]),'STRING':([29,33,34,35,37,40,41,42,43,44,46,48,51,55,56,57,58,59,60,61,62,63,65,69,70,71,72,73,74,78,79,80,81,82,83,84,86,88,89,91,92,93,97,100,109,110,111,114,115,119,120,122,123,125,130,131,132,],[44,44,44,44,-50,44,44,44,44,-49,-48,-36,-35,44,44,44,44,44,44,44,44,44,44,-47,44,44,44,-46,44,-45,-37,-43,-42,-41,-40,-44,-39,-38,44,44,44,-14,44,44,-22,44,-29,-23,44,44,-20,44,-15,-30,44,-21,-16,]),'ID':([9,15,17,28,29,33,34,35,37,38,40,41,42,43,44,46,48,51,53,55,56,57,58,59,60,61,62,63,64,65,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,86,88,89,90,91,92,93,96,97,98,99,100,104,109,110,111,114,115,116,117,119,120,121,122,123,125,126,130,131,132,134,],[13,13,23,23,45,45,45,45,-50,52,45,45,45,45,-49,-48,-36,-35,-51,45,45,45,45,45,45,45,45,45,87,45,-47,45,45,45,-46,45,52,-26,-45,-37,-43,-42,-41,-40,-44,-39,-38,45,105,45,45,-14,-28,45,-24,112,45,-51,-22,45,-29,-23,45,105,-33,45,-20,-27,45,-15,-30,-31,45,-21,-16,-34,]),'ASSIGN':([25,45,96,],[29,71,110,]),'LBRACKET':([20,],[25,]),'INTEGER':([29,33,34,35,37,40,41,42,43,44,46,48,51,55,56,57,58,59,60,61,62,63,65,69,70,71,72,73,74,78,79,80,81,82,83,84,86,88,89,91,92,93,97,100,109,110,111,114,115,119,120,122,123,125,130,131,132,],[46,46,46,46,-50,46,46,46,46,-49,-48,-36,-35,46,46,46,46,46,46,46,46,46,46,-47,46,46,46,-46,46,-45,-37,-43,-42,-41,-40,-44,-39,-38,46,46,46,-14,46,46,-22,46,-29,-23,46,46,-20,46,-15,-30,46,-21,-16,]),'PLUS':([37,39,44,46,48,49,50,51,66,67,68,69,73,78,79,80,81,82,83,84,85,86,88,92,93,94,95,102,106,109,111,114,120,121,123,125,128,131,132,133,],[-50,56,-49,-48,56,56,56,-35,56,56,56,56,-46,56,-37,56,56,56,-40,56,56,-39,-38,56,56,56,56,56,56,-22,56,-23,-20,56,-15,-30,56,-21,-15,56,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'feature_list':([9,15,],[10,19,]),'feature':([9,15,],[11,11,]),'case_action_list':([104,],[116,]),'formal_list':([17,28,],[21,32,]),'empty':([9,15,17,28,53,89,92,100,104,115,122,],[12,12,22,22,77,103,103,103,117,103,103,]),'expression_let_var_decl_list':([53,],[76,]),'expression_list':([89,92,100,115,122,],[101,107,113,124,129,]),'class':([0,4,],[4,4,]),'case_action':([90,116,],[104,126,]),'expression_let_var_decl':([38,76,],[53,98,]),'program':([0,],[1,]),'classes':([0,4,],[2,6,]),'expression':([29,33,34,35,40,41,42,43,55,56,57,58,59,60,61,62,63,65,70,71,72,74,89,91,92,97,100,110,115,119,122,130,],[39,48,49,50,66,67,68,69,78,79,80,81,82,83,84,85,86,88,92,93,94,95,102,106,102,111,102,121,102,128,102,133,]),'formalParam':([17,28,],[24,24,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> classes','program',1,'p_program','parser.py',45),
  ('classes -> class classes','classes',2,'p_class_list','parser.py',51),
  ('classes -> class','classes',1,'p_class_list','parser.py',52),
  ('class -> CLASS TYPE_ID INHERITS TYPE_ID LBRACE feature_list RBRACE SEMICOLON','class',8,'p_class','parser.py',63),
  ('feature_list -> feature SEMICOLON feature_list','feature_list',3,'p_feature_list','parser.py',69),
  ('feature_list -> feature','feature_list',1,'p_feature_list','parser.py',70),
  ('feature_list -> empty','feature_list',1,'p_feature_list','parser.py',71),
  ('feature -> ID LPAREN formal_list RPAREN COLON TYPE_ID LBRACE expression RBRACE','feature',9,'p_feature','parser.py',83),
  ('feature -> ID COLON TYPE_ID LBRACKET ASSIGN expression RBRACKET','feature',7,'p_feature','parser.py',84),
  ('formal_list -> formalParam COMMA formal_list','formal_list',3,'p_formal_list','parser.py',93),
  ('formal_list -> formalParam','formal_list',1,'p_formal_list','parser.py',94),
  ('formal_list -> empty','formal_list',1,'p_formal_list','parser.py',95),
  ('formalParam -> ID COLON TYPE_ID','formalParam',3,'p_formalParam','parser.py',108),
  ('expression -> ID ASSIGN expression','expression',3,'p_expression_assignment','parser.py',114),
  ('expression -> expression DOT ID LPAREN expression_list RPAREN','expression',6,'p_expression_dispatch','parser.py',120),
  ('expression -> expression ALT expression DOT ID LPAREN expression_list RPAREN','expression',8,'p_expression_dispatch','parser.py',121),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','parser.py',132),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',133),
  ('expression_list -> empty','expression_list',1,'p_expression_list','parser.py',134),
  ('expression -> ID LPAREN expression expression_list RPAREN','expression',5,'p_expression_method_call','parser.py',146),
  ('expression -> IF expression THEN expression ELSE expression FI','expression',7,'p_expression_if','parser.py',154),
  ('expression -> WHILE expression LOOP expression POOL','expression',5,'p_expression_while','parser.py',161),
  ('expression -> LBRACE expression SEMICOLON expression_list RBRACE','expression',5,'p_expression_block','parser.py',168),
  ('expression_let_var_decl_list -> expression_let_var_decl_list expression_let_var_decl','expression_let_var_decl_list',2,'p_expression_let_var_decl_list','parser.py',175),
  ('expression_let_var_decl_list -> expression_let_var_decl_list','expression_let_var_decl_list',1,'p_expression_let_var_decl_list','parser.py',176),
  ('expression_let_var_decl_list -> empty','expression_let_var_decl_list',1,'p_expression_let_var_decl_list','parser.py',177),
  ('expression_let_var_decl -> ID COLON TYPE_ID ASSIGN expression','expression_let_var_decl',5,'p_expression_let_var_decl','parser.py',190),
  ('expression_let_var_decl -> ID COLON TYPE_ID','expression_let_var_decl',3,'p_expression_let_var_decl','parser.py',191),
  ('expression -> LET expression_let_var_decl expression_let_var_decl_list IN expression','expression',5,'p_expression_let','parser.py',202),
  ('expression -> CASE expression OF case_action case_action_list ESAC','expression',6,'p_case','parser.py',211),
  ('case_action_list -> case_action_list case_action','case_action_list',2,'p_case_action_list','parser.py',218),
  ('case_action_list -> case_action_list','case_action_list',1,'p_case_action_list','parser.py',219),
  ('case_action_list -> empty','case_action_list',1,'p_case_action_list','parser.py',220),
  ('case_action -> ID COLON TYPE_ID ARROW expression SEMICOLON','case_action',6,'p_case_action','parser.py',235),
  ('expression -> NEW TYPE_ID','expression',2,'p_new_type','parser.py',241),
  ('expression -> ISVOID expression','expression',2,'p_isVoid','parser.py',247),
  ('expression -> expression PLUS expression','expression',3,'p_math_op','parser.py',255),
  ('expression -> expression MINUS expression','expression',3,'p_math_op','parser.py',256),
  ('expression -> expression MULTIPLY expression','expression',3,'p_math_op','parser.py',257),
  ('expression -> expression DIVIDE expression','expression',3,'p_math_op','parser.py',258),
  ('expression -> expression LESSTHAN expression','expression',3,'p_math_comp','parser.py',273),
  ('expression -> expression LESSEQ expression','expression',3,'p_math_comp','parser.py',274),
  ('expression -> expression EQUAL expression','expression',3,'p_math_comp','parser.py',275),
  ('expression -> expression GREATERTHAN expression','expression',3,'p_math_comp','parser.py',276),
  ('expression -> expression GREATEREQ expression','expression',3,'p_math_comp','parser.py',277),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','parser.py',292),
  ('expression -> NOT expression','expression',2,'p_not','parser.py',299),
  ('expression -> INTEGER','expression',1,'p_integer','parser.py',306),
  ('expression -> STRING','expression',1,'p_string','parser.py',312),
  ('expression -> BOOLEAN','expression',1,'p_boolean','parser.py',318),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',324),
]
