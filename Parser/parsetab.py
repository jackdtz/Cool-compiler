
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'F8DBBF7B20C75BA667DF6AD53A281C3C'
    
_lr_action_items = {'LET':([29,37,39,41,42,43,44,46,47,52,53,54,55,56,57,58,59,60,66,67,70,92,98,99,102,105,107,111,114,122,125,130,137,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-28,35,35,35,35,-27,35,35,35,35,]),'ASSIGN':([21,36,108,],[29,66,122,]),'ID':([8,10,13,14,16,17,20,26,29,31,35,37,39,41,42,43,44,46,47,52,53,54,55,56,57,58,59,60,62,66,67,70,91,92,98,99,102,103,105,106,107,111,114,118,122,125,130,137,140,],[11,-8,11,11,23,-7,11,-6,36,23,63,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,89,36,36,36,63,36,36,-28,36,116,36,120,36,36,-27,116,36,36,36,36,-37,]),'WHILE':([29,37,39,41,42,43,44,46,47,52,53,54,55,56,57,58,59,60,66,67,70,92,98,99,102,105,107,111,114,122,125,130,137,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-28,37,37,37,37,-27,37,37,37,37,]),'TYPE_ID':([1,7,15,30,40,51,61,90,126,],[5,9,21,49,71,78,88,108,134,]),'CLASS':([0,3,4,6,27,33,],[1,1,-3,-2,-4,-5,]),'NEW':([29,37,39,41,42,43,44,46,47,52,53,54,55,56,57,58,59,60,66,67,70,92,98,99,102,105,107,111,114,122,125,130,137,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-28,40,40,40,40,-27,40,40,40,40,]),'LESSEQ':([34,38,45,48,68,69,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,93,94,100,101,104,110,112,113,115,119,124,127,131,132,133,136,138,139,],[58,-52,-53,-54,58,58,-38,58,58,58,58,-39,58,-43,None,-40,58,None,-42,None,58,-41,58,58,58,-26,-51,58,-19,58,58,58,-25,-34,-17,58,58,-24,-18,58,]),'INHERITS':([5,],[7,]),'LOOP':([38,45,48,68,71,74,76,77,79,80,81,82,83,84,85,86,87,93,101,104,110,112,124,127,131,136,138,],[-52,-53,-54,98,-38,-44,-39,-50,-43,-47,-40,-49,-45,-42,-46,-48,-41,-16,-26,-51,-29,-19,-25,-34,-17,-24,-18,]),'IF':([29,37,39,41,42,43,44,46,47,52,53,54,55,56,57,58,59,60,66,67,70,92,98,99,102,105,107,111,114,122,125,130,137,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-28,41,41,41,41,-27,41,41,41,41,]),'DOT':([34,38,45,48,68,69,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,93,94,100,101,104,110,112,113,115,119,124,127,131,132,133,136,138,139,],[62,-52,-53,-54,62,62,-38,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,106,62,62,62,-26,-51,62,-19,62,62,62,-25,-34,-17,62,62,-24,-18,62,]),'RPAREN':([16,22,24,25,38,45,48,49,50,67,71,74,75,76,77,79,80,81,82,83,84,85,86,87,93,94,95,96,97,101,104,107,110,112,121,123,124,127,130,131,135,136,138,],[-55,-14,-13,32,-52,-53,-54,-15,-12,-55,-38,-44,104,-39,-50,-43,-47,-40,-49,-45,-42,-46,-48,-41,-16,-23,112,-22,-21,-26,-51,-55,-29,-19,131,-20,-25,-34,-55,-17,138,-24,-18,]),'EQUAL':([34,38,45,48,68,69,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,93,94,100,101,104,110,112,113,115,119,124,127,131,132,133,136,138,139,],[53,-52,-53,-54,53,53,-38,53,53,53,53,-39,53,-43,None,-40,53,None,-42,None,53,-41,53,53,53,-26,-51,53,-19,53,53,53,-25,-34,-17,53,53,-24,-18,53,]),'STRING':([29,37,39,41,42,43,44,46,47,52,53,54,55,56,57,58,59,60,66,67,70,92,98,99,102,105,107,111,114,122,125,130,137,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-28,45,45,45,45,-27,45,45,45,45,]),'PLUS':([34,38,45,48,68,69,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,93,94,100,101,104,110,112,113,115,119,124,127,131,132,133,136,138,139,],[54,-52,-53,-54,54,54,-38,54,54,54,54,-39,54,-43,54,-40,54,54,-42,54,54,-41,54,54,54,-26,-51,54,-19,54,54,54,-25,-34,-17,54,54,-24,-18,54,]),'NOT':([29,37,39,41,42,43,44,46,47,52,53,54,55,56,57,58,59,60,66,67,70,92,98,99,102,105,107,111,114,122,125,130,137,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-28,47,47,47,47,-27,47,47,47,47,]),'LESSTHAN':([34,38,45,48,68,69,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,93,94,100,101,104,110,112,113,115,119,124,127,131,132,133,136,138,139,],[56,-52,-53,-54,56,56,-38,56,56,56,56,-39,56,-43,None,-40,56,None,-42,None,56,-41,56,56,56,-26,-51,56,-19,56,56,56,-25,-34,-17,56,56,-24,-18,56,]),'RBRACE':([8,10,13,14,17,20,26,38,45,48,70,71,74,76,77,79,80,81,82,83,84,85,86,87,93,99,101,104,110,112,114,119,124,127,131,136,138,],[-55,-8,19,-55,-7,28,-6,-52,-53,-54,101,-38,-44,-39,-50,-43,-47,-40,-49,-45,-42,-46,-48,-41,-16,-28,-26,-51,-29,-19,-27,129,-25,-34,-17,-24,-18,]),'COLON':([11,23,32,63,116,],[15,30,51,90,126,]),'$end':([2,3,4,6,27,33,],[0,-1,-3,-2,-4,-5,]),'ALT':([34,38,45,48,68,69,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,93,94,100,101,104,110,112,113,115,119,124,127,131,132,133,136,138,139,],[61,-52,-53,-54,61,61,-38,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-26,-51,61,-19,61,61,61,-25,-34,-17,61,61,-24,-18,61,]),'ELSE':([38,45,48,71,74,76,77,79,80,81,82,83,84,85,86,87,93,101,104,110,112,115,124,127,131,136,138,],[-52,-53,-54,-38,-44,-39,-50,-43,-47,-40,-49,-45,-42,-46,-48,-41,-16,-26,-51,-29,-19,125,-25,-34,-17,-24,-18,]),'MULTIPLY':([34,38,45,48,68,69,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,93,94,100,101,104,110,112,113,115,119,124,127,131,132,133,136,138,139,],[57,-52,-53,-54,57,57,-38,57,57,57,57,-39,57,-43,57,57,57,57,-42,57,57,57,57,57,57,-26,-51,57,-19,57,57,57,-25,-34,-17,57,57,-24,-18,57,]),'INTEGER':([29,37,39,41,42,43,44,46,47,52,53,54,55,56,57,58,59,60,66,67,70,92,98,99,102,105,107,111,114,122,125,130,137,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-28,38,38,38,38,-27,38,38,38,38,]),'LBRACE':([5,9,29,37,39,41,42,43,44,46,47,52,53,54,55,56,57,58,59,60,66,67,70,78,92,98,99,102,105,107,111,114,122,125,130,137,],[8,14,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,105,39,39,-28,39,39,39,39,-27,39,39,39,39,]),'ESAC':([117,118,128,140,],[127,-36,-35,-37,]),'GREATERTHAN':([34,38,45,48,68,69,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,93,94,100,101,104,110,112,113,115,119,124,127,131,132,133,136,138,139,],[59,-52,-53,-54,59,59,-38,59,59,59,59,-39,-50,-43,-47,-40,59,-45,-42,-46,59,-41,-16,59,59,-26,-51,59,-19,59,59,59,-25,-34,-17,59,59,-24,-18,59,]),'CASE':([29,37,39,41,42,43,44,46,47,52,53,54,55,56,57,58,59,60,66,67,70,92,98,99,102,105,107,111,114,122,125,130,137,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-28,42,42,42,42,-27,42,42,42,42,]),'OF':([38,45,48,71,73,74,76,77,79,80,81,82,83,84,85,86,87,93,101,104,110,112,124,127,131,136,138,],[-52,-53,-54,-38,103,-44,-39,-50,-43,-47,-40,-49,-45,-42,-46,-48,-41,-16,-26,-51,-29,-19,-25,-34,-17,-24,-18,]),'COMMA':([16,22,24,25,38,45,48,49,50,64,65,67,71,74,76,77,79,80,81,82,83,84,85,86,87,93,94,95,96,97,101,104,107,108,109,110,112,121,123,124,127,130,131,132,135,136,138,],[-55,-14,-13,31,-52,-53,-54,-15,-12,-31,91,-55,-38,-44,-39,-50,-43,-47,-40,-49,-45,-42,-46,-48,-41,-16,-23,111,-22,-21,-26,-51,-55,-33,-30,-29,-19,111,-20,-25,-34,-55,-17,-32,111,-24,-18,]),'FI':([38,45,48,71,74,76,77,79,80,81,82,83,84,85,86,87,93,101,104,110,112,124,127,131,133,136,138,],[-52,-53,-54,-38,-44,-39,-50,-43,-47,-40,-49,-45,-42,-46,-48,-41,-16,-26,-51,-29,-19,-25,-34,-17,136,-24,-18,]),'DIVIDE':([34,38,45,48,68,69,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,93,94,100,101,104,110,112,113,115,119,124,127,131,132,133,136,138,139,],[52,-52,-53,-54,52,52,-38,52,52,52,52,-39,52,-43,52,52,52,52,-42,52,52,52,52,52,52,-26,-51,52,-19,52,52,52,-25,-34,-17,52,52,-24,-18,52,]),'THEN':([38,45,48,71,72,74,76,77,79,80,81,82,83,84,85,86,87,93,101,104,110,112,124,127,131,136,138,],[-52,-53,-54,-38,102,-44,-39,-50,-43,-47,-40,-49,-45,-42,-46,-48,-41,-16,-26,-51,-29,-19,-25,-34,-17,-24,-18,]),'UNARY_COMP':([29,37,39,41,42,43,44,46,47,52,53,54,55,56,57,58,59,60,66,67,70,92,98,99,102,105,107,111,114,122,125,130,137,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-28,43,43,43,43,-27,43,43,43,43,]),'IN':([38,45,48,64,65,71,74,76,77,79,80,81,82,83,84,85,86,87,93,101,104,108,109,110,112,124,127,131,132,136,138,],[-52,-53,-54,-31,92,-38,-44,-39,-50,-43,-47,-40,-49,-45,-42,-46,-48,-41,-16,-26,-51,-33,-30,-29,-19,-25,-34,-17,-32,-24,-18,]),'GREATEREQ':([34,38,45,48,68,69,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,93,94,100,101,104,110,112,113,115,119,124,127,131,132,133,136,138,139,],[55,-52,-53,-54,55,55,-38,55,55,55,55,-39,-50,-43,-47,-40,55,-45,-42,-46,55,-41,-16,55,55,-26,-51,55,-19,55,55,55,-25,-34,-17,55,55,-24,-18,55,]),'POOL':([38,45,48,71,74,76,77,79,80,81,82,83,84,85,86,87,93,101,104,110,112,113,124,127,131,136,138,],[-52,-53,-54,-38,-44,-39,-50,-43,-47,-40,-49,-45,-42,-46,-48,-41,-16,-26,-51,-29,-19,124,-25,-34,-17,-24,-18,]),'ISVOID':([29,37,39,41,42,43,44,46,47,52,53,54,55,56,57,58,59,60,66,67,70,92,98,99,102,105,107,111,114,122,125,130,137,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-28,46,46,46,46,-27,46,46,46,46,]),'MINUS':([34,38,45,48,68,69,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,93,94,100,101,104,110,112,113,115,119,124,127,131,132,133,136,138,139,],[60,-52,-53,-54,60,60,-38,60,60,60,60,-39,60,-43,60,-40,60,60,-42,60,60,-41,60,60,60,-26,-51,60,-19,60,60,60,-25,-34,-17,60,60,-24,-18,60,]),'ARROW':([134,],[137,]),'SEMICOLON':([12,18,19,21,28,34,38,45,48,69,71,74,76,77,79,80,81,82,83,84,85,86,87,93,100,101,104,110,112,124,127,129,131,136,138,139,],[17,26,27,-10,33,-11,-52,-53,-54,99,-38,-44,-39,-50,-43,-47,-40,-49,-45,-42,-46,-48,-41,-16,114,-26,-51,-29,-19,-25,-34,-9,-17,-24,-18,140,]),'BOOLEAN':([29,37,39,41,42,43,44,46,47,52,53,54,55,56,57,58,59,60,66,67,70,92,98,99,102,105,107,111,114,122,125,130,137,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-28,48,48,48,48,-27,48,48,48,48,]),'LPAREN':([11,29,36,37,39,41,42,43,44,46,47,52,53,54,55,56,57,58,59,60,66,67,70,89,92,98,99,102,105,107,111,114,120,122,125,130,137,],[16,44,67,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,107,44,44,-28,44,44,44,44,-27,130,44,44,44,44,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([29,37,39,41,42,43,44,46,47,52,53,54,55,56,57,58,59,60,66,67,70,92,98,102,105,107,111,122,125,130,137,],[34,68,69,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,93,94,100,110,113,115,119,94,94,132,133,94,139,]),'empty':([8,14,16,67,107,130,],[10,10,22,96,96,96,]),'arguments':([67,107,130,],[95,121,135,]),'expressions':([39,],[70,]),'feature':([8,13,14,20,],[12,18,12,18,]),'classes':([0,],[3,]),'formal':([16,31,],[24,50,]),'formals':([16,],[25,]),'argument':([67,107,111,130,],[97,97,123,97,]),'features':([8,14,],[13,20,]),'case_action':([103,118,],[118,118,]),'program':([0,],[2,]),'case_actions':([103,118,],[117,128,]),'let_var_decl':([35,91,],[64,109,]),'let_var_decls':([35,],[65,]),'class':([0,3,],[4,6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> classes','program',1,'p_program','parser.py',48),
  ('classes -> classes class','classes',2,'p_classes','parser.py',54),
  ('classes -> class','classes',1,'p_classes','parser.py',55),
  ('class -> CLASS TYPE_ID LBRACE features RBRACE SEMICOLON','class',6,'p_class','parser.py',65),
  ('class -> CLASS TYPE_ID INHERITS TYPE_ID LBRACE features RBRACE SEMICOLON','class',8,'p_class','parser.py',66),
  ('features -> features feature SEMICOLON','features',3,'p_features','parser.py',75),
  ('features -> feature SEMICOLON','features',2,'p_features','parser.py',76),
  ('features -> empty','features',1,'p_features','parser.py',77),
  ('feature -> ID LPAREN formals RPAREN COLON TYPE_ID LBRACE expression RBRACE','feature',9,'p_feature','parser.py',90),
  ('feature -> ID COLON TYPE_ID','feature',3,'p_feature','parser.py',91),
  ('feature -> ID COLON TYPE_ID ASSIGN expression','feature',5,'p_feature','parser.py',92),
  ('formals -> formals COMMA formal','formals',3,'p_formals','parser.py',103),
  ('formals -> formal','formals',1,'p_formals','parser.py',104),
  ('formals -> empty','formals',1,'p_formals','parser.py',105),
  ('formal -> ID COLON TYPE_ID','formal',3,'p_formal','parser.py',117),
  ('expression -> ID ASSIGN expression','expression',3,'p_expression_assignment','parser.py',123),
  ('expression -> expression DOT ID LPAREN arguments RPAREN','expression',6,'p_expression_dispatch','parser.py',129),
  ('expression -> expression ALT TYPE_ID DOT ID LPAREN arguments RPAREN','expression',8,'p_expression_dispatch','parser.py',130),
  ('expression -> ID LPAREN arguments RPAREN','expression',4,'p_expression_method_call','parser.py',139),
  ('arguments -> arguments COMMA argument','arguments',3,'p_arguments','parser.py',145),
  ('arguments -> argument','arguments',1,'p_arguments','parser.py',146),
  ('arguments -> empty','arguments',1,'p_arguments','parser.py',147),
  ('argument -> expression','argument',1,'p_argument','parser.py',159),
  ('expression -> IF expression THEN expression ELSE expression FI','expression',7,'p_expression_if','parser.py',165),
  ('expression -> WHILE expression LOOP expression POOL','expression',5,'p_expression_while','parser.py',171),
  ('expression -> LBRACE expressions RBRACE','expression',3,'p_expression_block','parser.py',177),
  ('expressions -> expressions expression SEMICOLON','expressions',3,'p_expressions','parser.py',183),
  ('expressions -> expression SEMICOLON','expressions',2,'p_expressions','parser.py',184),
  ('expression -> LET let_var_decls IN expression','expression',4,'p_expression_let','parser.py',196),
  ('let_var_decls -> let_var_decls COMMA let_var_decl','let_var_decls',3,'p_let_var_decls','parser.py',202),
  ('let_var_decls -> let_var_decl','let_var_decls',1,'p_let_var_decls','parser.py',203),
  ('let_var_decl -> ID COLON TYPE_ID ASSIGN expression','let_var_decl',5,'p_let_var_decl','parser.py',215),
  ('let_var_decl -> ID COLON TYPE_ID','let_var_decl',3,'p_let_var_decl','parser.py',216),
  ('expression -> CASE expression OF case_actions ESAC','expression',5,'p_expression_case','parser.py',225),
  ('case_actions -> case_action case_actions','case_actions',2,'p_case_actions','parser.py',231),
  ('case_actions -> case_action','case_actions',1,'p_case_actions','parser.py',232),
  ('case_action -> ID COLON TYPE_ID ARROW expression SEMICOLON','case_action',6,'p_case_action','parser.py',242),
  ('expression -> NEW TYPE_ID','expression',2,'p_expression_new','parser.py',248),
  ('expression -> ISVOID expression','expression',2,'p_expression_isvoid','parser.py',254),
  ('expression -> expression PLUS expression','expression',3,'p_expression_math_op','parser.py',260),
  ('expression -> expression MINUS expression','expression',3,'p_expression_math_op','parser.py',261),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_math_op','parser.py',262),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_math_op','parser.py',263),
  ('expression -> UNARY_COMP expression','expression',2,'p_expression_math_op','parser.py',264),
  ('expression -> expression LESSTHAN expression','expression',3,'p_expression_comparison','parser.py',279),
  ('expression -> expression LESSEQ expression','expression',3,'p_expression_comparison','parser.py',280),
  ('expression -> expression EQUAL expression','expression',3,'p_expression_comparison','parser.py',281),
  ('expression -> expression GREATERTHAN expression','expression',3,'p_expression_comparison','parser.py',282),
  ('expression -> expression GREATEREQ expression','expression',3,'p_expression_comparison','parser.py',283),
  ('expression -> NOT expression','expression',2,'p_expression_comparison','parser.py',284),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','parser.py',301),
  ('expression -> INTEGER','expression',1,'p_expression_integer','parser.py',307),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',313),
  ('expression -> BOOLEAN','expression',1,'p_expression_boolean','parser.py',319),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',325),
]
